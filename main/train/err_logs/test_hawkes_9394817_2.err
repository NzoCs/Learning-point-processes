GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
INFO:datasets:PyTorch version 2.6.0 available.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
SLURM auto-requeueing enabled. Setting signal handlers.
/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:425: The 'test_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=3` in the `DataLoader` to improve performance.
Traceback (most recent call last):
  File "/gpfs/users/regnaguen/Learning-point-processes/main/train/test.py", line 35, in <module>
    main()
  File "/gpfs/users/regnaguen/Learning-point-processes/main/train/test.py", line 31, in main
    plrunner.test()
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/runner/trainer.py", line 224, in test
    results = trainer.test(
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 775, in test
    return call._call_and_handle_interrupt(
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 48, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 817, in _test_impl
    results = self._run(model, ckpt_path=ckpt_path)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1012, in _run
    results = self._run_stage()
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1049, in _run_stage
    return self._evaluation_loop.run()
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py", line 179, in _decorator
    return loop_run(self, *args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 145, in run
    self._evaluation_step(batch, batch_idx, dataloader_idx, dataloader_iter)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 437, in _evaluation_step
    output = call._call_strategy_hook(trainer, hook_name, *step_args)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 328, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/strategies/strategy.py", line 425, in test_step
    return self.lightning_module.test_step(*args, **kwargs)
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/models/basemodel.py", line 406, in test_step
    pred = self.predict_one_step_at_every_event(batch)
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/models/basemodel.py", line 584, in predict_one_step_at_every_event
    accepted_dtimes, weights = self.event_sampler.draw_next_time_one_step(
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/models/thinning.py", line 187, in draw_next_time_one_step
    intensity_upper_bound = self.compute_intensity_upper_bound(time_seq,
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/models/thinning.py", line 66, in compute_intensity_upper_bound
    intensities_for_bound = intensity_fn(time_seq,
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/models/hawkes.py", line 193, in compute_intensities_at_sample_times
    intensities = self.compute_intensities_at_times(
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/models/hawkes.py", line 125, in compute_intensities_at_times
    masked_contributions = torch.nan_to_num(masked_contributions, nan=0.0, posinf=0.0, neginf=0.0)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 8.14 GiB. GPU 0 has a total capacity of 39.39 GiB of which 6.22 GiB is free. Including non-PyTorch memory, this process has 33.16 GiB memory in use. Of the allocated memory 29.59 GiB is allocated by PyTorch, and 3.09 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
srun: error: ruche-gpu13: task 0: Exited with exit code 1
