GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
INFO:datasets:PyTorch version 2.6.0 available.
INFO:easy_tpp.preprocess.data_loader:Train dataset created with 1800 sequences
INFO:easy_tpp.preprocess.data_loader:Validation dataset created with 600 sequences
/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/torch/utils/data/dataloader.py:624: UserWarning: This DataLoader will create 31 worker processes in total. Our suggested max number of worker in current system is 4, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(
You are using a CUDA device ('NVIDIA A100-SXM4-40GB') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name                   | Type                          | Params | Mode 
---------------------------------------------------------------------------------
0 | layer_type_emb         | Embedding                     | 96     | train
1 | event_sampler          | EventSampler                  | 0      | train
2 | layer_position_emb     | TimeShiftedPositionalEncoding | 16     | train
3 | layer_intensity_hidden | Linear                        | 66     | train
4 | softplus               | ScaledSoftplus                | 2      | train
5 | stack_layers           | ModuleList                    | 6.3 K  | train
6 | mu                     | Sequential                    | 64     | train
7 | eta                    | Sequential                    | 64     | train
8 | gamma                  | Sequential                    | 64     | train
---------------------------------------------------------------------------------
6.7 K     Trainable params
0         Non-trainable params
6.7 K     Total params
0.027     Total estimated model params size (MB)
30        Modules in train mode
0         Modules in eval mode
SLURM auto-requeueing enabled. Setting signal handlers.
Traceback (most recent call last):
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/torchmetrics/metric.py", line 549, in wrapped_func
    update(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/torchmetrics/classification/stat_scores.py", line 347, in update
    self._update_state(tp, fp, tn, fn)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/torchmetrics/classification/stat_scores.py", line 77, in _update_state
    self.tp = self.tp + tp if not isinstance(self.tp, list) else [*self.tp, tp]
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/gpfs/users/regnaguen/Learning-point-processes/main/train/train.py", line 31, in <module>
    main()
  File "/gpfs/users/regnaguen/Learning-point-processes/main/train/train.py", line 27, in main
    plrunner.train()
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/runner/trainer.py", line 126, in train
    trainer.fit(
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 561, in fit
    call._call_and_handle_interrupt(
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 48, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 599, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1012, in _run
    results = self._run_stage()
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1054, in _run_stage
    self._run_sanity_check()
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1083, in _run_sanity_check
    val_loop.run()
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py", line 179, in _decorator
    return loop_run(self, *args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 145, in run
    self._evaluation_step(batch, batch_idx, dataloader_idx, dataloader_iter)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 437, in _evaluation_step
    output = call._call_strategy_hook(trainer, hook_name, *step_args)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 328, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/strategies/strategy.py", line 412, in validation_step
    return self.lightning_module.validation_step(*args, **kwargs)
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/models/basemodel.py", line 295, in validation_step
    one_step_metrics = one_step_metrics_compute.compute_all_metrics(
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/evaluate/metrics_compute.py", line 63, in compute_all_metrics
    return self._compute_prediction_metrics(batch, pred)
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/evaluate/metrics_compute.py", line 76, in _compute_prediction_metrics
    metrics['type_accuracy'] = self.calculate_type_accuracy(masked)
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/evaluate/metrics_compute.py", line 136, in calculate_type_accuracy
    return accuracy_metric(masked.pred_types, masked.true_types).item() * 100
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/torchmetrics/metric.py", line 315, in forward
    self._forward_cache = self._forward_reduce_state_update(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/torchmetrics/metric.py", line 384, in _forward_reduce_state_update
    self.update(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/torchmetrics/metric.py", line 552, in wrapped_func
    raise RuntimeError(
RuntimeError: Encountered different devices in metric calculation (see stacktrace for details). This could be due to the metric class not being on the same device as input. Instead of `metric=MulticlassAccuracy(...)` try to do `metric=MulticlassAccuracy(...).to(device)` where device corresponds to the device of the input.
srun: error: ruche-gpu13: task 0: Exited with exit code 1
