GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
INFO:datasets:PyTorch version 2.6.0 available.
INFO:easy_tpp.preprocess.data_loader:Train dataset created with 9000 sequences
INFO:easy_tpp.preprocess.data_loader:Validation dataset created with 3000 sequences
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name                 | Type               | Params | Mode 
--------------------------------------------------------------------
0 | layer_type_emb       | Embedding          | 64     | train
1 | event_sampler        | EventSampler       | 0      | train
2 | layer_rnn            | LSTM               | 8.4 K  | train
3 | layer_time_delta     | Sequential         | 2.1 K  | train
4 | layer_base_intensity | Sequential         | 1.1 K  | train
5 | layer_att            | MultiHeadAttention | 3.2 K  | train
6 | layer_intensity      | Sequential         | 33     | train
7 | layer_temporal_emb   | Linear             | 64     | train
--------------------------------------------------------------------
14.9 K    Trainable params
0         Non-trainable params
14.9 K    Total params
0.060     Total estimated model params size (MB)
19        Modules in train mode
0         Modules in eval mode
SLURM auto-requeueing enabled. Setting signal handlers.
Traceback (most recent call last):
  File "/gpfs/users/regnaguen/Learning-point-processes/main/train/train.py", line 31, in <module>
    main()
  File "/gpfs/users/regnaguen/Learning-point-processes/main/train/train.py", line 27, in main
    plrunner.train()
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/runner/trainer.py", line 139, in train
    trainer.fit(
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 561, in fit
    call._call_and_handle_interrupt(
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 48, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 599, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1012, in _run
    results = self._run_stage()
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1054, in _run_stage
    self._run_sanity_check()
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1083, in _run_sanity_check
    val_loop.run()
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py", line 179, in _decorator
    return loop_run(self, *args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 145, in run
    self._evaluation_step(batch, batch_idx, dataloader_idx, dataloader_iter)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 437, in _evaluation_step
    output = call._call_strategy_hook(trainer, hook_name, *step_args)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 328, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/gpfs/workdir/regnaguen/LTPP/lib/python3.9/site-packages/pytorch_lightning/strategies/strategy.py", line 412, in validation_step
    return self.lightning_module.validation_step(*args, **kwargs)
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/models/basemodel.py", line 286, in validation_step
    loss, num_events = self.loglike_loss(batch)
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/models/anhn.py", line 146, in loglike_loss
    event_ll, non_event_ll, num_events = self.compute_loglikelihood(lambda_at_event=lambda_at_event,
  File "/gpfs/users/regnaguen/Learning-point-processes/easy_tpp/models/basemodel.py", line 198, in compute_loglikelihood
    non_event_ll = total_sampled_lambdas.mean(dim=-1) * time_delta_seq * seq_mask
RuntimeError: The size of tensor a (100) must match the size of tensor b (128) at non-singleton dimension 1
srun: error: ruche-gpu13: task 0: Exited with exit code 1
