[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "easy_tpp"
version = "0.1.0"
description = "An easy and flexible tool for neural temporal point process"
readme = "README.md"
authors = [
    {name = "Alipay"}
]
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
keywords = ["temporal point process", "neural networks", "machine learning"]
dependencies = [
    "numpy",
    "pandas",
    "torch",
    "lightning",
    "matplotlib",
    "seaborn",
    "scipy",
    "wandb",
    "hydra-core",
    "omegaconf",
    "torchmetrics",
    "torchtyping",
    "typeguard",
    "tensorboard",
    "tqdm",
    "fastdtw",
    "datasets",
    "polars",
    "optuna>=4.5.0",
    "pytest>=8.4.2",
    "ipykernel>=6.30.1",
]

[project.optional-dependencies]
cli = [
    # CLI-specific dependencies with proper version constraints
    "rich>=14.1.0",
    "pyyaml>=6.0.2",
    "typer>=0.17.4",
    "click>=8.2.1",
    "colorama>=0.4.6",
    "tabulate>=0.9.0",
    "inquirer>=3.4.1",
    "prompt-toolkit>=3.0.52",
    "psutil>=7.0.0",
    "py-cpuinfo>=9.0.0",
    "questionary>=2.1.1",
    "textual>=6.1.0",
    "alive-progress>=3.3.0",
]
docs = [
    "sphinx",
    "sphinx_rtd_theme",
    "myst_parser",
    "nbsphinx",
    "nbsphinx_link",
    "sphinx_fontawesome",
    "sphinx-autobuild",
    "recommonmark",
    "sphinx_markdown_tables",
]
dev = [
    "pytest",
    "pytest-cov",
    "black",
    "flake8",
    "isort",
    "mypy",
    "pre-commit",
]
all = [
    "easy_tpp[cli,docs,dev]"
]

[project.urls]
Homepage = "https://github.com/ant-research/EasyTemporalPointProcess/"
Repository = "https://github.com/ant-research/EasyTemporalPointProcess/"
Documentation = "https://github.com/ant-research/EasyTemporalPointProcess/"
"Bug Tracker" = "https://github.com/ant-research/EasyTemporalPointProcess/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["easy_tpp"]
exclude = ["tests*", "*.tests*", "*.tests"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.txt", "*.md"]

# Configuration for development tools
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["easy_tpp"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["easy_tpp"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "pytorch_lightning.*",
    "wandb.*",
    "dvc.*",
    "hydra.*",
    "omegaconf.*",
    "torchmetrics.*",
    "fastdtw.*",
    "datasets.*",
    "polars.*",
]
ignore_missing_imports = true
